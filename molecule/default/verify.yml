---
# This is an example playbook to execute Ansible tests.

- name: Verify
  hosts: all
  gather_facts: true
  vars:
    service_name: "apt-cacher-ng"
  tasks:
    - name: Gather package facts
      ansible.builtin.package_facts:
        manager: auto

    - name: Gather service facts
      ansible.builtin.service_facts:

    - name: Verify Packages
      ansible.builtin.assert:
        that: "'{{ item }}' in ansible_facts.packages"
      with_items:
        - apt-cacher-ng

    - name: "Print service facts for service {{ service_name }}"
      ansible.builtin.debug:
        var: ansible_facts.services[service_name]

    - name: Verify service
      ansible.builtin.assert:
        that:
          - "'{{ service_name }}' in ansible_facts.services"
          - "ansible_facts.services['{{ service_name }}']['state'] == 'running'"
          # "status" does not seem to exist?
          # - "{{ ansible_facts.services[item]['status'] == 'enabled' }}"

    - name: Read acng config file
      ansible.builtin.shell: 'grep -v "^#\|^$" /etc/apt-cacher-ng/acng.conf'
      register: acng_config_contents
      changed_when: false

    - name: Assert configuration settings in acng.conf
      ansible.builtin.assert:
        that:
          # regex works for values that exist
          - "acng_config_contents.stdout | regex_search('^CacheDir: ', multiline=True)"
          # regex works for values that do not exist
          - "not acng_config_contents.stdout | regex_search('^Dummy:', multiline=True)"
          # values in dict.value['value'] must exist
          - "acng_config_contents.stdout | regex_search('^ExThreshold: 3', multiline=True)"
          # values in dict.value must exist
          - "acng_config_contents.stdout | regex_search('^RedirMax: 5', multiline=True)"
          # values with "ensure: absent" must not exist
          - "not acng_config_contents.stdout | regex_search('^Remap-epel:', multiline=True)"
          # values with dict.value['value'] set *and* dict.value['ensure']='absent'" must not exist
          - "not acng_config_contents.stdout | regex_search('^PassThroughPattern:', multiline=True)"

    - name: Read security.conf
      ansible.builtin.command: 'cat /etc/apt-cacher-ng/security.conf'
      register: acng_security_contents
      changed_when: false

    - name: Assert configuration settings in security.conf
      ansible.builtin.assert:
        that:
          # Ignored when `acng_admin_name` is not be set. -- doc
          - "not acng_security_contents.stdout | regex_search('^AdminAuth:', multiline=True)"

    - name: Set proxy in apt config
      ansible.builtin.copy:
        dest: /etc/apt/apt.conf.d/proxy
        content: "Acquire::http::Proxy \"http://{{ ansible_facts['hostname'] }}:3142\";\n"
        mode: '0644'

    - name: Install a package
      ansible.builtin.apt:
        name: bc
        state: present
        update_cache: true
        force_apt_get: true
      retries: 1
